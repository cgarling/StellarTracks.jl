name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: ['*']
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' }}
    timeout-minutes: 60
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
        include:
          - os: macos-latest
            arch: aarch64
            version: '1'
          - os: windows-latest
            arch: x64
            version: '1'          
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          DATADEPS_ALWAYS_ACCEPT: 'true'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  Aqua:
    name: Aqua Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2	  
      - uses: julia-actions/julia-buildpkg@v1
      - run: julia --color=yes -e 'using Pkg; Pkg.add("Aqua")'
      - run: julia --project=@. --color=yes -e 'using Aqua, StellarTracks; Aqua.test_all(StellarTracks; ambiguities=true)'

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      actions: write # needed to allow julia-actions/cache to proactively delete old caches that it has created
      contents: write
      statuses: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        id: cpython3
        with:
          python-version: '3.x'
      - run: python -m pip install --upgrade pip
      - run: pip install 'matplotlib==3.*'
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Install tex dependencies
        run: sudo apt-get update && sudo apt-get install dvipng texlive-latex-base texlive-latex-extra texlive-fonts-recommended cm-super
      - name: Configure doc environment
        shell: julia --project=docs --color=yes {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()
          Pkg.build()
        env:
          PYTHON: ${{ steps.cpython3.outputs.python-path }}
      - uses: julia-actions/julia-docdeploy@v1
        env:
          PYTHON: ${{ steps.cpython3.outputs.python-path }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DATADEPS_ALWAYS_ACCEPT: 'true'
      - name: Run doctests
        shell: julia --project=docs --color=yes {0}
        run: |
          using Documenter: DocMeta, doctest
          using StellarTracks
          DocMeta.setdocmeta!(StellarTracks, :DocTestSetup, :(using StellarTracks); recursive=true)
          doctest(StellarTracks)
