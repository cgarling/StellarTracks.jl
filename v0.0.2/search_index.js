var documenterSearchIndex = {"docs":
[{"location":"mist/#MIST","page":"MIST","title":"MIST","text":"","category":"section"},{"location":"mist/","page":"MIST","title":"MIST","text":"Here we describe the interface we provide to the MIST v1.2 library of stellar evolutionary tracks. MIST specific code is housed in the MIST submodule, which can be accessed as","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"using StellarTracks.MIST # load all exported methods\nusing StellarTracks.MIST: MISTLibrary, X, Y, Z # load specific methods","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"The main papers describing the MIST family of stellar models are Dotter [1] and Choi et al. [14]. The tracks as provided by the MIST team here include the equivalent evolutionary points (EEPs) necessary to support robust isochrone creation and interpolation.","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"The MIST library has been widely used as it covers the full range of stellar masses and metallicities relevant for most studies of stellar populations. MIST includes stars with initial stellar masses from 0.1 to 300 solar masses and initial metallicities -4 le textMtextH le 05. MIST includes post-MS and post-RGB evolution (when appropriate). MIST also provides rotating (vvcrit=0.4) and non-rotating (vvcrit=0.0) models.","category":"page"},{"location":"mist/#Data-Acquisition","page":"MIST","title":"Data Acquisition","text":"","category":"section"},{"location":"mist/","page":"MIST","title":"MIST","text":"This package handles downloading and pre-processing of the MIST stellar tracks. The main access point we provide is MISTLibrary, which will load and make available the full library of stellar tracks. The first time you call this method, you will be prompted to download the required data files. The total data volume that will be downloaded is about 1.3 GB and will total 158 MB after processing. Information on customizing the install location is available here. The data can be uninstalled by running using DataDeps; rm(datadep\"MISTv1.2_vvcrit0.0\"; recursive=true); rm(datadep\"MISTv1.2_vvcrit0.4\"; recursive=true). With all the tracks available, we are able to perform operations like interpolating isochrones at any age and metallicity within the MIST parameter space.","category":"page"},{"location":"mist/#Table-Details","page":"MIST","title":"Table Details","text":"","category":"section"},{"location":"mist/","page":"MIST","title":"MIST","text":"The user guide for the MIST products is available here. The full MIST tracks contain 77 data columns originating from the MESA output. An description of the columns is available here. Currently, we process the raw tracks and only save the subset of columns given by StellarTracks.MIST.select_columns (see below). These columns are the ones most commonly needed for computing isochrones and applying bolometric corrections to compare against observed stellar populations. This choice is an optimization for storage space, load time, and development simplicity. If you require access to more columns, please submit an issue on the source repository and we can consider options.","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"using StellarTracks.MIST\nMIST.select_columns # These columns are saved from raw tracks","category":"page"},{"location":"mist/#Examples","page":"MIST","title":"Examples","text":"","category":"section"},{"location":"mist/","page":"MIST","title":"MIST","text":"Load the full MIST library of non-rotating models vvcrit=0, which is downloaded via DataDeps.jl if not already available. MIST also provides rotating models with vvcrit=0.4 which can be loaded with MISTLibrary(0.4).","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"using StellarTracks.MIST\np = MISTLibrary(0.0)","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"Use the MIST.MISTLibrary to interpolate an isochrone at log10(age [yr]) = 10.05 and metallicity textMtextH = -1234. The isochrone is returned as a NamedTuple.","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"iso = isochrone(p, 10.05, -1.234)","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"The NamedTuple returned by isochrone can be converted to table types, like TypedTables.Table to simplify further use.","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"using TypedTables: Table\nTable(iso)","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"The theoretical isochrone is plotted below.","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"plot_hr(iso) # hide","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"We can load a grid of bolometric corrections from BolometricCorrections.jl to add observational magnitudes to the theoretical isochrone. In this example, we use the MIST bolometric correction grid, which offers bolometric corrections for varying metallicities ([Fe/H]) and reddening values (A_V). This method returns a TypedTables.Table that contains the information from both sources. Here we evaluate an isochrone with log10(age [yr]) = 10.05, textMtextH = -1234, and A_v=002 mag. ","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"using BolometricCorrections.MIST: MISTBCGrid\nm = MISTBCGrid(\"JWST\")\niso = isochrone(p, m, 10.05, -1.234, 0.02)","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"All available columns in the isochrone can be obtained with TypedTables.columnnames.","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"using TypedTables: columnnames\ncolumnnames(iso)","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"A color-magnitude diagram constructed from the isochrone is plotted below.","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"plot_cmd(iso) # hide","category":"page"},{"location":"mist/#Chemistry-API","page":"MIST","title":"Chemistry API","text":"","category":"section"},{"location":"mist/","page":"MIST","title":"MIST","text":"We re-export the MIST.MISTChemistry add interlink type defined in BolometricCorrections.jl that can be used to access information on the chemical mixture assumed for the MIST models. All models have scaled-solar chemical compositions.","category":"page"},{"location":"mist/#Library-API","page":"MIST","title":"Library API","text":"","category":"section"},{"location":"mist/#StellarTracks.MIST.MISTLibrary","page":"MIST","title":"StellarTracks.MIST.MISTLibrary","text":"MISTLibrary(vvcrit::Number=0)\n\nMISTLibrary implements the AbstractTrackLibrary interface for the MIST stellar evolution library. Instances can be constructed by providing a supported vvcrit argument for the rotation parameter, which must be equal to either 0 (no rotation) or 0.4. We set vvcrit=0 by default. If you construct an instance as p = MISTLibrary(0.0), it is callable as\n\np(mh::Number) to interpolate the full library to a new metallicity (returning a MISTTrackSet), or\np(mh::Number, M::Number) to interpolate the tracks to a specific metallicity and initial stellar mass (returning a MISTTrack).\n\nThis type also supports isochrone construction (see isochrone).\n\nExamples\n\njulia> p = MISTLibrary(0.0)\nStructure of interpolants for the MIST library of stellar tracks with vvcrit=0.0. Valid range of metallicities is (-4.0, 0.5).\n\njulia> isochrone(p, 10.05, -2) isa NamedTuple\ntrue\n\n\n\n\n\n","category":"type"},{"location":"mist/#StellarTracks.isochrone-Tuple{MISTLibrary, Number, Number}","page":"MIST","title":"StellarTracks.isochrone","text":"isochrone(p::MISTLibrary, logAge::Number, mh::Number)\n\nInterpolates properties of the stellar tracks in the library at the requested logarithmic age (logAge = log10(age [yr])) and logarithmic metallicity [M/H] = mh. Returns a NamedTuple containing the properties listed below:\n\neep: Equivalent evolutionary points\nm_ini: Initial stellar masses, in units of solar masses.\nlogTe: Base-10 logarithm of the effective temperature [K] of the stellar model.\nMbol: Bolometric luminosity of the stellar model.\nlogg: Surface gravity of the stellar model.\nlog_surf_cell_z: Base-10 logarithm of the surface metal mass fraction (Z).\n\n\n\n\n\n","category":"method"},{"location":"mist/#Track-Set-API","page":"MIST","title":"Track Set API","text":"","category":"section"},{"location":"mist/#StellarTracks.MIST.MISTTrackSet","page":"MIST","title":"StellarTracks.MIST.MISTTrackSet","text":"MISTTrackSet(mh::Number, vvcrit::Number=0)\n\nMISTTrackSet implements the AbstractTrackSet interface for the MIST stellar evolution library.\n\njulia> ts = StellarTracks.MIST.MISTTrackSet(0.0, 0.0)\nMISTTrackSet with MH=0.0, vvcrit=0.0, Z=0.0142014201420142, Y=0.2703270327032703, 1710 EEPs and 196 initial stellar mass points.\n\njulia> ts(1.01) # Interpolate track at new initial mass\nMISTTrack with M_ini=1.01, MH=0.0, vvcrit=0.0, Z=0.0142014201420142, Y=0.2703270327032703, X=0.7154715471547155.\n\njulia> isochrone(ts, 10.0) isa NamedTuple # Interpolate isochrone at `log10(age [yr]) = 10`\ntrue\n\n\n\n\n\n","category":"type"},{"location":"mist/#Individual-Tracks-API","page":"MIST","title":"Individual Tracks API","text":"","category":"section"},{"location":"mist/#StellarTracks.MIST.MISTTrack","page":"MIST","title":"StellarTracks.MIST.MISTTrack","text":"MISTTrack(mh::Number, mass::Number, vvcrit::Number=0)\n\nMISTTrack implements the AbstractTrack interface for the MIST stellar evolution library.\n\njulia> track = StellarTracks.MIST.MISTTrack(-2, 0.15, 0.0)\nMISTTrack with M_ini=0.15, MH=-2, vvcrit=0.0, Z=0.00014899227095992976, Y=0.24922374966753474, X=0.7506272580615054.\n\njulia> track(7.0) # interpolate track at log10(age [yr]) = 7\n(log_L = -1.5293719450743, log_Teff = 3.587337261741102, log_g = 4.447603584617846, log_surf_cell_z = -3.8450984758441953)\n\n\n\n\n\n","category":"type"},{"location":"mist/#PARSEC-References","page":"MIST","title":"PARSEC References","text":"","category":"section"},{"location":"mist/","page":"MIST","title":"MIST","text":"This page cites the following references:","category":"page"},{"location":"mist/","page":"MIST","title":"MIST","text":"A. Dotter. MESA ISOCHRONES AND STELLAR TRACKS (MIST) 0: METHODS FOR THE CONSTRUCTION OF STELLAR ISOCHRONES. ApJS 222, 8 (2016).\n\n\n\nJ. Choi, A. Dotter, C. Conroy, M. Cantiello, B. Paxton and B. D. Johnson. MESA ISOCHRONES AND STELLAR TRACKS (MIST). I. SOLAR-SCALED MODELS. ApJ 823, 102 (2016).\n\n\n\n","category":"page"},{"location":"api/#api","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Individual-Tracks","page":"API","title":"Individual Tracks","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"An individual stellar track, containing the time evolution of properties for a single star, is represented by our AbstractTrack type. Different concrete implementations are used for different stellar evolution libraries, but all support the common access API defined below.","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#StellarTracks.AbstractTrack","page":"API","title":"StellarTracks.AbstractTrack","text":"Abstract supertype representing individual stellar tracks. Different concrete implementations are used for different stellar libraries, but all subtypes of AbstractTrack are guaranteed to support the generic API described in the documentation.\n\nThe main way to get the properties of the modeled star when it has a particular age, assuming track is a valid concrete instance, is to call the track with the logarithmic age track(log10(age)) where age is in years. This will return a NamedTuple containing the available properties (e.g., logL, logTe) of the modeled star at that age. Not all libraries will have the same properties available. \n\n\n\n\n\n","category":"type"},{"location":"api/#Base.extrema-Tuple{StellarTracks.AbstractTrack}","page":"API","title":"Base.extrema","text":"Base.extrema(t::AbstractTrack)\n\nReturns the minimum and maximum logarithmic age (log10(age [yr])) of the stellar model.\n\n\n\n\n\n","category":"method"},{"location":"api/#StellarTracks.mass-Tuple{StellarTracks.AbstractTrack}","page":"API","title":"StellarTracks.mass","text":"mass(t::AbstractTrack)\n\nReturns the initial stellar mass of the modeled star in solar masses. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.X-Tuple{StellarTracks.AbstractTrack}","page":"API","title":"BolometricCorrections.X","text":"X(t::AbstractTrack)\n\nReturns the hydrogen mass fraction of the modeled star. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.Y-Tuple{StellarTracks.AbstractTrack}","page":"API","title":"BolometricCorrections.Y","text":"Y(t::AbstractTrack)\n\nReturns the helium mass fraction of the modeled star. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.Z-Tuple{StellarTracks.AbstractTrack}","page":"API","title":"BolometricCorrections.Z","text":"Z(t::AbstractTrack)\n\nReturns the metal mass fraction of the modeled star. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.MH-Tuple{StellarTracks.AbstractTrack}","page":"API","title":"BolometricCorrections.MH","text":"MH(t::AbstractTrack)\n\nReturns the logarithmic metal abundance of the modeled star, defined as [M/H] = log(Z/X) - log(Z⊙/X⊙). \n\n\n\n\n\n","category":"method"},{"location":"api/#StellarTracks.post_rgb-Tuple{StellarTracks.AbstractTrack}","page":"API","title":"StellarTracks.post_rgb","text":"post_rgb(t::AbstractTrack)\n\nReturns true if the track includes post-RGB evolution, false otherwise. \n\n\n\n\n\n","category":"method"},{"location":"api/#Concrete-Implementations","page":"API","title":"Concrete Implementations","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"PARSEC.PARSECTrack\nMIST.MISTTrack","category":"page"},{"location":"api/#Track-Sets","page":"API","title":"Track Sets","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"We define a \"track set\" to be a set of individual stellar tracks that share common properties (typically initial metallicity). By grouping these tracks together, we can interpolate between tracks in the set, create isochrones, and perform other similar operations.","category":"page"},{"location":"api/#API-2","page":"API","title":"API","text":"","category":"section"},{"location":"api/#StellarTracks.AbstractTrackSet","page":"API","title":"StellarTracks.AbstractTrackSet","text":"Abstract supertype representing a set of stellar tracks with common properties and supports common operations like interpolating between tracks and calculating isochrones. Specifically, it is assumed all individual tracks in a track set have identical initial metallicity and chemical composition. Subtypes of AbstractTrackSet are guaranteed to support the generic API described in the documentation.\n\nConcrete instances are callable with an initial stellar mass (in solar masses), returning an interpolated track at the requested mass. \n\n\n\n\n\n","category":"type"},{"location":"api/#StellarTracks.mass-Tuple{StellarTracks.AbstractTrackSet}","page":"API","title":"StellarTracks.mass","text":"mass(ts::AbstractTrackSet)\n\nReturns the initial stellar masses (in solar masses) of the individual tracks contained in the track set. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.X-Tuple{StellarTracks.AbstractTrackSet}","page":"API","title":"BolometricCorrections.X","text":"X(ts::AbstractTrackSet)\n\nReturns the common hydrogen mass fraction of the tracks contained in the track set. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.Y-Tuple{StellarTracks.AbstractTrackSet}","page":"API","title":"BolometricCorrections.Y","text":"Y(ts::AbstractTrackSet)\n\nReturns the common helium mass fraction of the tracks contained in the track set. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.Z-Tuple{StellarTracks.AbstractTrackSet}","page":"API","title":"BolometricCorrections.Z","text":"Z(ts::AbstractTrackSet)\n\nReturns the common metal mass fraction of the tracks contained in the track set. \n\n\n\n\n\n","category":"method"},{"location":"api/#BolometricCorrections.MH-Tuple{StellarTracks.AbstractTrackSet}","page":"API","title":"BolometricCorrections.MH","text":"MH(ts::AbstractTrackSet)\n\nReturns the common logarithmic metal abundance of the tracks contained in the track set, defined as [M/H] = log(Z/X) - log(Z⊙/X⊙). \n\n\n\n\n\n","category":"method"},{"location":"api/#StellarTracks.post_rgb-Tuple{StellarTracks.AbstractTrackSet}","page":"API","title":"StellarTracks.post_rgb","text":"post_rgb(ts::AbstractTrackSet)\n\nReturns true if the tracks in the track set include post-RGB evolution, false otherwise. \n\n\n\n\n\n","category":"method"},{"location":"api/#StellarTracks.isochrone-Tuple{StellarTracks.AbstractTrackSet, Number}","page":"API","title":"StellarTracks.isochrone","text":"isochrone(ts::AbstractTrackSet, logAge::Number)\n\nInterpolates properties of the stellar tracks in the track set at the requested logarithmic age (logAge = log10(age [yr])). Returns a NamedTuple containing the properties; different libraries may have different properties available. If result = isochrone(...), EEP points are generally available as result.eep and the corresponding initial stellar masses are result.m_ini.\n\njulia> using StellarTracks.MIST\n\njulia> ts = MISTTrackSet(-1, 0); # Load set of MIST tracks with [M/H] = -1, vvcrit=0\n\njulia> isochrone(ts, 10.0) isa NamedTuple\ntrue\n\n\n\n\n\n","category":"method"},{"location":"api/#StellarTracks.isochrone-Tuple{StellarTracks.AbstractTrackSet, BolometricCorrections.AbstractBCTable, Number}","page":"API","title":"StellarTracks.isochrone","text":"isochrone(ts::StellarTracks.AbstractTrackSet,\n          bc::BolometricCorrections.AbstractBCTable,\n          logAge::Number)\n\nReturns an isochrone as a TypedTables.Table calculated using the stellar evolutionary tracks contained in ts with bolometric corrections interpolated from the provided table bc at the logarithmic age logAge. Column names can be retrieved with TypedTables.columnnames. The result can be converted to a matrix with Tables.matrix.\n\nusing StellarTracks, BolometricCorrections\np = PARSECLibrary()    # Load PARSEC library of stellar models\nm = MISTBCGrid(\"JWST\") # Load MIST library of BCs\nisochrone(p.ts[1], m(MH(p.ts[1]), 0.0), 10.0)\n\nTable with 35 columns and 1323 rows:\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Concrete-Implementations-2","page":"API","title":"Concrete Implementations","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"PARSEC.PARSECTrackSet\nMIST.MISTTrackSet","category":"page"},{"location":"api/#Track-Libraries","page":"API","title":"Track Libraries","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"For ease of use, our main entry point is the AbstractTrackLibrary, which loads and organizes all stellar tracks available from a given library (e.g., PARSEC). Once all tracks have been loaded, subsets with common chemical compositions can be extracted. Individual tracks and isochrones can also be interpolated directly from the library instance. However, the interfaces for these interpolations are not generic as not all libraries offer the same variations in initial chemistry – e.g., most will offer variation in total metallicity (i.e., Z), but some also include variation in alpha-element abundances. These methods are documented separately for each stellar library under their unique pages in the left panel.","category":"page"},{"location":"api/#API-3","page":"API","title":"API","text":"","category":"section"},{"location":"api/#StellarTracks.AbstractTrackLibrary","page":"API","title":"StellarTracks.AbstractTrackLibrary","text":"Abstract supertype for loading the full set of all stellar tracks available from a given library (e.g., PARSEC). For some libraries (e.g., MIST), there are different model sets for other stellar input parameters (e.g., rotation vvcrit in MIST) that are not interpolated over – these should be provided as arguments to the concrete type constructors.\n\nThese are typically assembled as a collection of individual track sets, with one track set constructed for each unique set of stellar chemical compositions (i.e., [M/H]). For more details, see the documentation for AbstractTrackSet. Subtypes of AbstractTrackLibrary are guaranteed to support the generic API described in the documentation.\n\nConcrete instances can be called to interpolate tracks at other metallicities and initial stellar masses – specifics of this behavior depend on the library. \n\n\n\n\n\n","category":"type"},{"location":"api/#StellarTracks.isochrone-Tuple{StellarTracks.AbstractTrackLibrary, Number, Number}","page":"API","title":"StellarTracks.isochrone","text":"isochrone(tl::AbstractTrackLibrary, logAge::Number, mh::Number)\n\nInterpolates properties of the stellar tracks in the track library at the requested logarithmic age (logAge = log10(age [yr])) and metallicity [M/H] = mh. Returns a NamedTuple containing the properties; different libraries may have different properties available. If result = isochrone(...), EEP points are generally available as result.eep and the corresponding initial stellar masses are result.m_ini.\n\njulia> using StellarTracks.MIST\n\njulia> p = MISTLibrary(0.0); # Load the library of MIST tracks with vvcrit=0\n\njulia> isochrone(p, 10.0, -1.65) isa NamedTuple\ntrue\n\n\n\n\n\n","category":"method"},{"location":"api/#StellarTracks.isochrone-Tuple{StellarTracks.AbstractTrackLibrary, BolometricCorrections.AbstractBCTable, Number, Number}","page":"API","title":"StellarTracks.isochrone","text":"isochrone(tl::AbstractTrackLibrary,\n          bc::BolometricCorrections.AbstractBCTable,\n          logAge::Number,\n          mh::Number)\n\nReturns an isochrone as a TypedTables.Table calculated using the stellar evolutionary tracks contained in tl with bolometric corrections interpolated from the provided table bc at the logarithmic age logAge and metallicity [M/H] = mh. Column names can be retrieved with TypedTables.columnnames. The result can be converted to a matrix with Tables.matrix.\n\nusing StellarTracks, BolometricCorrections\np = MISTLibrary(0.0)   # Load MIST library of non-rotating stellar models\nm = MISTBCGrid(\"JWST\") # Load MIST library of BCs\nisochrone(p, m(-1.01, 0.0), 10.0, -1.01)\n\nTable with 36 columns and 1465 rows:\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Concrete-Implementations-3","page":"API","title":"Concrete Implementations","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"PARSEC.PARSECLibrary\nMIST.MISTLibrary","category":"page"},{"location":"api/#Utilities","page":"API","title":"Utilities","text":"","category":"section"},{"location":"api/#StellarTracks.Mbol","page":"API","title":"StellarTracks.Mbol","text":"Mbol(logL::Number, solmbol::Number=4.74)\n\nReturns the bolometric magnitude corresponding to the provided logarithmic bolometric luminosity logL which is provided in units of solar luminosities (e.g., logL = log10(L / L⊙)). This is given by Mbol⊙ - 2.5 * logL; the zeropoint of bolometric magnitude scale is defined by the solar bolometric magnitude, which you can specify as the second argument. The default (4.74) was recommended by IAU Resolution B2.\n\n\n\n\n\n","category":"function"},{"location":"api/#StellarTracks.logL","page":"API","title":"StellarTracks.logL","text":"logL(Mbol::Number, solmbol::Number=4.74)\n\nReturns the logarithmic bolometric luminosity in units of solar luminosities (e.g., logL = log10(L / L⊙)) corresponding to the provided bolometric magnitude. This is given by (Mbol⊙ - Mbol) / 2.5; the zeropoint of bolometric magnitude scale is defined by the solar bolometric magnitude,  which you can specify as the second argument. The default (4.74) was recommended by IAU Resolution B2.\n\n\n\n\n\n","category":"function"},{"location":"parsec/#PARSEC","page":"PARSEC","title":"PARSEC","text":"","category":"section"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"Here we describe the interface we provide to the PARSEC v1.2S library of stellar evolutionary tracks. PARSEC specific code is housed in the PARSEC submodule, which can be accessed as","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"using StellarTracks.PARSEC # load all exported methods\nusing StellarTracks.PARSEC: PARSECLibrary, X, Y, Z # load specific methods","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"The main paper describing the PARSEC family of stellar models is Bressan et al. [2], but the library of stellar models has been expanded over the years to add and improve coverage of various parameter spaces. A non-exhaustive list of papers presenting the PARSEC models up to V1.2S is provided below.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"Bressan et al. [2] is the first paper presenting the PARSEC models.\nChen et al. [3] presented an improved calibration for low-mass stars.\nTang et al. [4] and Chen et al. [5] presented new models of high-mass stars from 14 to 350 M⊙ with metallicities from 0001 le Z le 0004.\nRosenfield et al. [6] formulated equivalent evolutionary points (EEPs) for the PARSEC models to support use in isochrone interpolation routines. Our implementation uses their data products.\nMarigo et al. [7] augmented the PARSEC models with COLIBRI models of the thermally pulsating asymptotic giant branch phase (TP-AGB).\nPastorelli et al. [8] and Pastorelli et al. [9] compared the COLIBRI TP-AGB models to observations of the SMC and LMC, respectively.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"The full list of relevant papers maintained by the group is available here.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"As we use the PARSEC V1.2S tracks augmented with EEP points by Rosenfield et al. [6], we do not currently support the more recent PARSEC V2.0 tracks [10, 11]. We hope to add V2.0 in the future, but doing so would require new measurements of the EEP points which we do not presently support.","category":"page"},{"location":"parsec/#Data-Acquisition","page":"PARSEC","title":"Data Acquisition","text":"","category":"section"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"This package handles downloading and pre-processing of the EEP tracks produced by Rosenfield et al. [6] (available here) using DataDeps.jl. The main access point we provide is PARSECLibrary, which will load and make available the full library of stellar tracks. The first time you call this method, you will be prompted to download the required data files. The total data volume is ~150 MB after processing. Information on customizing the install location is available here. The data can be uninstalled by running using DataDeps; rm(datadep\"PARSECv1.2S\"; recursive=true). With all the tracks available, we are able to perform operations like interpolating isochrones at any age and metallicity within the PARSEC parameter space.","category":"page"},{"location":"parsec/#Examples","page":"PARSEC","title":"Examples","text":"","category":"section"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"First we load the full PARSEC library, which is downloaded via DataDeps.jl if not already available.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"using StellarTracks.PARSEC\np = PARSECLibrary()","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"Now we use the PARSEC.PARSECLibrary to interpolate an isochrone at log10(age [yr]) = 10.05 and logarithmic metallicity [M/H]=-1.234. The isochrone is returned as a NamedTuple.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"iso = isochrone(p, 10.05, -1.234)","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"The NamedTuple returned by isochrone can be converted to table types, like TypedTables.Table to simplify further use.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"using TypedTables: Table\nTable(iso)","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"The theoretical isochrone is plotted below.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"plot_hr(iso) # hide","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"We can load a grid of bolometric corrections from BolometricCorrections.jl to add observational magnitudes to the theoretical isochrone. In this example, we use the MIST bolometric correction grid, which offers bolometric corrections for varying metallicities ([M/H]) and reddening values (A_V).","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"Because the solar metallicity calibrations of PARSEC and MIST are not exactly the same, the protostellar metal mass fraction Z that corresponds to a given [M/H] is not the same between the two libraries. The isochrone interface will convert the given [M/H], which is assumed to be the desired metallicity in the stellar track library, to its corresponding metal mass fraction, and then convert from the metal mass fraction to the correct [M/H] for the assumed chemical model of the bolometric correction grid.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"This method returns a TypedTables.Table that contains the information from both sources. Here we evaluate an isochrone with log10(age [yr]) = 10.05, [M/H]=-1.234, and A_v=002 mag. ","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"using BolometricCorrections.MIST: MISTBCGrid\nm = MISTBCGrid(\"JWST\")\niso = isochrone(p, m, 10.05, -1.234, 0.02)","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"All available columns in the isochrone can be obtained with TypedTables.columnnames.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"using TypedTables: columnnames\ncolumnnames(iso)","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"A color-magnitude diagram constructed from the isochrone is plotted below.","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"plot_cmd(iso) # hide","category":"page"},{"location":"parsec/#Chemistry-API","page":"PARSEC","title":"Chemistry API","text":"","category":"section"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"We provide the StellarTracks.PARSEC.PARSECChemistry type that follows the chemistry API defined in BolometricCorrections.jl to access information on the chemical mixture assumed for the PARSEC models.","category":"page"},{"location":"parsec/#StellarTracks.PARSEC.PARSECChemistry","page":"PARSEC","title":"StellarTracks.PARSEC.PARSECChemistry","text":"PARSECChemistry()\n\nReturns a singleton struct representing the PARSEC chemical mixture model. We presently only include scaled-solar models. The solar protostellar chemical mixture for PARSEC was calibrated to reproduce solar photospheric observations via a forward modeling approach (see section 3 of Bressan et al. [2]). The full solar calibration assumed for PARSEC is given in Table 3 of Bressan et al. [2]. The distribution of heavy metals is taken from Grevesse and Sauval [12] and Caffau et al. [13] (see section 4 of Bressan et al. [2]).\n\njulia> using StellarTracks.PARSEC: PARSECChemistry, X, Y, Z, X_phot, Y_phot, Z_phot, MH;\n\njulia> chem = PARSECChemistry();\n\njulia> X(chem) + Y(chem) + Z(chem) ≈ 1 # solar protostellar values\ntrue\n\njulia> X_phot(chem) + Y_phot(chem) + Z_phot(chem) ≈ 1 # solar photospheric values\ntrue\n\njulia> MH(chem, Z(chem) * 0.1) ≈ -1.0265716016323736\ntrue\n\njulia> Z(chem, -1.0265716016323736) ≈ Z(chem) * 0.1\ntrue\n\n\n\n\n\n","category":"type"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"Note that in our conversions between Z and [M/H], remembering that MH = log10(Z/X) - log10(Z⊙/X⊙), we use the protostellar solar values for Z⊙ and X⊙ (these are Z_initial and X_initial = 1 - Z_initial - Y_initial in Table 4 of Bressan et al. [2]). We do this as X and Z for the PARSEC tracks also refer to the protostellar chemical composition of the stars – photospheric metallicities are not generally uniform due to diffusive properties that can redistribute the metals in a star over time. It therefore seems proper for Z⊙ and X⊙ to be the solar protostellar values rather than the present-day photospheric values. Our definition differs from the standard PARSEC convention – for example, Table 4 of Bressan et al. [2] and the online CMD webform for PARSEC isochrones both assume Z⊙/X⊙ = 0.0207 when computing [M/H], which is the photospheric result of Caffau et al. [13]. As such, it is expected that our MH function will correspond to a different value of Z than these sources. To facilitate comparisons, we provide the following functions to convert between Z and [M/H] using the PARSEC convention – i.e., these functions will return the same Z for a given value of [M/H] as found in Table 4 of Bressan et al. [2] and as returned by the CMD webform.","category":"page"},{"location":"parsec/#StellarTracks.PARSEC.MH_canon","page":"PARSEC","title":"StellarTracks.PARSEC.MH_canon","text":"MH_canon(mix::PARSECChemistry, Zval)\n\nReturns the [M/H] value for the provided protostellar value of Z, where the solar abundances are taken to be photospheric rather than protostellar, while the provided Zval is assumed to be protostellar. This matches the convention of Table 4 of Bressan et al. [2] and the CMD webform for PARSEC.\n\njulia> using StellarTracks.PARSEC: PARSECChemistry, MH_canon;\n\njulia> MH_canon(PARSECChemistry(), 0.0005) ≈ -1.4921252963659897\ntrue\n\n\n\n\n\n","category":"function"},{"location":"parsec/#StellarTracks.PARSEC.Z_canon","page":"PARSEC","title":"StellarTracks.PARSEC.Z_canon","text":"Z_canon(mix::PARSECChemistry, MHval)\n\nReturns the protostellar metal mass fraction corresponding to the provided value of [M/H] where the solar abundances are taken to be photospheric rather than protostellar. This matches the convention of Table 4 of Bressan et al. [2] and the CMD webform for PARSEC.\n\njulia> using StellarTracks.PARSEC: PARSECChemistry, Z_canon;\n\njulia> Z_canon(PARSECChemistry(), -1.4921252963659897) ≈ 0.0005\ntrue\n\n\n\n\n\n","category":"function"},{"location":"parsec/#Library-API","page":"PARSEC","title":"Library API","text":"","category":"section"},{"location":"parsec/#StellarTracks.PARSEC.PARSECLibrary","page":"PARSEC","title":"StellarTracks.PARSEC.PARSECLibrary","text":"PARSECLibrary()\n\nPARSECLibrary implements the AbstractTrackLibrary interface for the PARSEC stellar evolution library. If you construct an instance as p = PARSECLibrary(), it is callable as\n\np(Z::Number) to interpolate the full library to a new metal mass fraction (returning a PARSECTrackSet), or\np(Z::Number, M::Number) to interpolate the tracks to a specific metallicity and initial stellar mass (returning a PARSECTrack).\n\nThis type also supports isochrone construction (see isochrone).\n\nExamples\n\njulia> p = PARSECLibrary()\nStructure of interpolants for PARSEC v1.2S library of stellar tracks. Valid range of metal mass fraction Z is (0.0001, 0.06).\n\njulia> isochrone(p, 10.05, -0.76) isa NamedTuple\ntrue\n\n\n\n\n\n","category":"type"},{"location":"parsec/#StellarTracks.isochrone-Tuple{PARSECLibrary, Number, Number}","page":"PARSEC","title":"StellarTracks.isochrone","text":"isochrone(p::PARSECLibrary, logAge::Number, mh::Number)\n\nInterpolates properties of the stellar tracks in the library at the requested logarithmic age (logAge = log10(age [yr])) and logarithmic metallicity mh. Returns a NamedTuple containing the properties listed below:\n\neep: Equivalent evolutionary points\nm_ini: Initial stellar masses, in units of solar masses.\nlogTe: Base-10 logarithm of the effective temperature [K] of the stellar model.\nMbol: Bolometric luminosity of the stellar model.\nlogg: Surface gravity of the stellar model calculated as -10.616 + log10(mass) + 4 * logTe - (4.77 - Mbol) / 2.5.\nC_O: Photospheric C/O ratio (the ZAMS value is used before the TP-AGB).\n\n\n\n\n\n","category":"method"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"The full library is principally a set of PARSECTrackSets, with one track set per unique chemical composition. All PARSEC models have scaled-solar chemical compositions, so they vary only in total metallicity (i.e., Z). ","category":"page"},{"location":"parsec/#Track-Set-API","page":"PARSEC","title":"Track Set API","text":"","category":"section"},{"location":"parsec/#StellarTracks.PARSEC.PARSECTrackSet","page":"PARSEC","title":"StellarTracks.PARSEC.PARSECTrackSet","text":"PARSECTrackSet(zval::Number)\n\nPARSECTrackSet implements the AbstractTrackSet interface for the PARSEC stellar evolution library.\n\njulia> ts = StellarTracks.PARSEC.PARSECTrackSet(0.0001)\nTrackSet with Y=0.248678, Z=0.0001, 1930 EEPs and 104 initial stellar mass points.\n\njulia> ts(1.01) # Interpolate track at new initial mass\nPARSECTrack with M_ini=1.01, MH=-2.278223981363725, Z=0.0001, Y=0.248678, X=0.7512220000000001.\n\njulia> isochrone(ts, 10.0) isa NamedTuple # Interpolate isochrone at `log10(age [yr]) = 10`\ntrue\n\n\n\n\n\n","category":"type"},{"location":"parsec/#Individual-Tracks-API","page":"PARSEC","title":"Individual Tracks API","text":"","category":"section"},{"location":"parsec/#StellarTracks.PARSEC.PARSECTrack","page":"PARSEC","title":"StellarTracks.PARSEC.PARSECTrack","text":"PARSECTrack(zval::Number, mass::Number)\n\nPARSECTrack implements the AbstractTrack interface for the PARSEC stellar evolution library.\n\nNote that due to the organization of the PARSEC data files, this method requires constructing a PARSECTrackSet and is therefore not efficient if your aim is to construct multiple tracks of the same metallicity zval. In this case, you should construct a PARSECTrackSet and call it with the masses you want, e.g., ts = PARSECTrackSet(0.0001); ts.([0.12, 0.15]). \n\njulia> track = StellarTracks.PARSEC.PARSECTrack(0.0001, 0.15)\nPARSECTrack with M_ini=0.15, MH=-2.278223981363725, Z=0.0001, Y=0.248678, X=0.7512220000000001.\n\njulia> track(7.0) # interpolate track at log10(age [yr]) = 7\n(logTe = 3.6015066653099757, Mbol = 8.518315848633081, logg = 4.464972304683626, C_O = 0.0)\n\n\n\n\n\n","category":"type"},{"location":"parsec/#PARSEC-References","page":"PARSEC","title":"PARSEC References","text":"","category":"section"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"This page cites the following references:","category":"page"},{"location":"parsec/","page":"PARSEC","title":"PARSEC","text":"A. Bressan, P. Marigo, L. Girardi, B. Salasnich, C. Dal Cero, S. Rubele and A. Nanni. PARSEC : stellar tracks and isochrones with the PAdova and TRieste Stellar Evolution Code. MNRAS 427, 127–145 (2012).\n\n\n\nY. Chen, L. Girardi, a. Bressan, P. Marigo, M. Barbieri and X. Kong. Improving PARSEC models for very low mass stars. MNRAS 444, 2525–2543 (2014).\n\n\n\nJ. Tang, A. Bressan, P. Rosenfield, A. Slemer, P. Marigo, L. Girardi and L. Bianchi. New PARSEC evolutionary tracks of massive stars at low metallicity: testing canonical stellar evolution in nearby star-forming dwarf galaxies. MNRAS 445, 4287–4305 (2014). Accessed on Mar 24, 2024. ADS Bibcode: 2014MNRAS.445.4287T.\n\n\n\nY. Chen, A. Bressan, L. Girardi, P. Marigo, X. Kong and A. Lanza. PARSEC evolutionary tracks of massive stars up to 350 M⊙ at metallicities 0.0001 ≤ Z ≤ 0.04. MNRAS 452, 1068–1080 (2015). Accessed on Mar 24, 2024. ADS Bibcode: 2015MNRAS.452.1068C.\n\n\n\nP. Rosenfield, P. Marigo, L. Girardi, J. J. Dalcanton, A. Bressan, B. F. Williams and A. Dolphin. Evolution of Thermally Pulsing Asymptotic Giant Branch Stars. V. Constraining the Mass Loss and Lifetimes of Intermediate-mass, Low-metallicity AGB Stars. ApJ 822, 73 (2016). Accessed on Aug 24, 2024. ADS Bibcode: 2016ApJ...822...73R.\n\n\n\nP. Marigo, L. Girardi, A. Bressan, P. Rosenfield, B. Aringer, Y. Chen, M. Dussin, A. Nanni, G. Pastorelli, T. S. Rodrigues, M. Trabucchi, S. Bladh, J. Dalcanton, M. A. Groenewegen, J. Montalbán and P. R. Wood. A New Generation of PARSEC-COLIBRI Stellar Isochrones Including the TP-AGB Phase. ApJ 835, 77 (2017). Accessed on Aug 21, 2024. ADS Bibcode: 2017ApJ...835...77M.\n\n\n\nG. Pastorelli, P. Marigo, L. Girardi, Y. Chen, S. Rubele, M. Trabucchi, B. Aringer, S. Bladh, A. Bressan, J. Montalbán, M. L. Boyer, J. J. Dalcanton, K. Eriksson, M. A. Groenewegen, S. Höfner, T. Lebzelter, A. Nanni, P. Rosenfield, P. R. Wood and M.-R. L. Cioni. Constraining the thermally pulsing asymptotic giant branch phase with resolved stellar populations in the Small Magellanic Cloud. MNRAS 485, 5666–5692 (2019). Accessed on Mar 24, 2024. ADS Bibcode: 2019MNRAS.485.5666P.\n\n\n\nG. Pastorelli, P. Marigo, L. Girardi, B. Aringer, Y. Chen, S. Rubele, M. Trabucchi, S. Bladh, M. L. Boyer, A. Bressan, J. J. Dalcanton, M. A. Groenewegen, T. Lebzelter, N. Mowlavi, K. L. Chubb, M.-R. L. Cioni, R. de Grijs, V. D. Ivanov, A. Nanni, J. T. van Loon and S. Zaggia. Constraining the thermally pulsing asymptotic giant branch phase with resolved stellar populations in the Large Magellanic Cloud. MNRAS 498, 3283–3301 (2020). Accessed on Mar 24, 2024. ADS Bibcode: 2020MNRAS.498.3283P.\n\n\n\nC. Nguyen, G. Costa, L. Girardi, G. Volpato, A. Bressan, Y. Chen, P. Marigo, X. Fu and P. Goudfrooij. PARSEC V2.0: Stellar tracks and isochrones of low- and intermediate-mass stars with rotation. Astronomy & Astrophysics 665, A126 (2022), arXiv:2207.08642 [astro-ph.SR].\n\n\n\nG. Costa, K. Shepherd, A. Bressan, F. Addari, Y. Chen, X. Fu, G. Volpato, C. Nguyen, L. Girardi, P. Marigo, A. Mazzi, G. Pastorelli, M. Trabucchi, D. Bossini and S. Zaggia. Evolutionary tracks, ejecta, and ionizing photons from intermediate-mass to very massive stars with PARSEC. Astronomy & Astrophysics 694, A193 (2025), arXiv:2501.12917 [astro-ph.SR].\n\n\n\nN. Grevesse and A. Sauval. Standard Solar Composition. Space Science Reviews 85, 161–174 (1998).\n\n\n\nE. Caffau, H.-G. Ludwig, M. Steffen, B. Freytag and P. Bonifacio. Solar Chemical Abundances Determined with a CO5BOLD 3D Model Atmosphere. Solar Physics 268, 255–269 (2011).\n\n\n\n","category":"page"},{"location":"basti_v1/#BaSTIv1","page":"BaSTIv1","title":"BaSTIv1","text":"","category":"section"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"There are currently some issues with certain track sets (defined by a specific combination of [α/Fe], Z, and \"canonical\" status) as not all track sets have the number of initial stellar masses that are expected from the descriptions in the BaSTI papers. For example, for p=BaSTILibrary(0, false), corresponding to [α/Fe] = 0 and canonical=false, the individual track sets with different Z have numbers of initial stellar masses that range from 22 (Z=1e-5) to 34 (z=0.05) – these two metallicities are the extended ones presented in Pietrinferni et al. [15], while the metallicities presented in Pietrinferni et al. [16] all have 25 initial stellar masses, though we expect 41 from the description in Pietrinferni et al. [16].","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"However, for the canonical models p=BaSTILibrary(0, true), there are 40 initial masses for the Pietrinferni et al. [16] tracks and (30, 37) for Z=(1e-5, 0.05) from Pietrinferni et al. [15]. For [α/Fe] = 0.4, presented in Pietrinferni et al. [17], average number of tracks per metallicity is 36 for canonical models and is either 17 or 26 for the non-canonical models.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"These low numbers of tracks create interpolation error when creating isochrones. Going to follow up with the BaSTI team and see if I can get new files that are not missing tracks. For now, I think the solar-scaled canonical models are the most complete and should be fairly safe to use.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"Here we describe the interface we provide to the older BaSTI stellar models presented in Pietrinferni et al. [16], Pietrinferni et al. [17] and Pietrinferni et al. [15] – as there are newer BaSTI models (e.g., Hidalgo et al. [18]), we describe these older models as BaSTIv1 to differentiate them. BaSTIv1 specific code is housed in the BaSTIv1 submodule, which can be accessed as","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"using StellarTracks.BaSTIv1 # load all exported methods\nusing StellarTracks.BaSTIv1: BaSTIv1Library, X, Y, Z # load specific methods","category":"page"},{"location":"basti_v1/#Data-Acquisition","page":"BaSTIv1","title":"Data Acquisition","text":"","category":"section"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"The tracks will be downloaded automatically using DataDeps.jl the first time you try to access them. The main access point we provide is BaSTIv1Library, which will load and make available the full library of stellar tracks. The first time you call this method, you will be prompted to download the required data files. The total data volume is ~32 MB. Information on customizing the install location is available here. The data can be uninstalled by running using DataDeps; rm(datadep\"BaSTIv1\"; recursive=true). With all the tracks available, we are able to perform operations like interpolating isochrones at any age and metallicity within the BaSTIv1 parameter space.","category":"page"},{"location":"basti_v1/#Grid-Properties","page":"BaSTIv1","title":"Grid Properties","text":"","category":"section"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"The BaSTIv1 model grid contains models for the following metal mass fractions:","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"BaSTIv1.zgrid","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"which correspond to the following values of [M/H]:","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"MH.(BaSTIv1Chemistry(), BaSTIv1.zgrid)","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"Note that the BaSTIv1 stellar models only include initial stellar masses from 0.5 to 10 solar masses. They therefore do not include the lower main sequence that can be important for modeling very nearby stellar populations. Nor do they include very high-mass stars (e.g., O-type stars) that can be important when studying populations with high present0-day SFRs.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"The BaSTIv1 grid includes models with scaled-solar abundance patterns as well as α-enhanced models with an average [α/Fe]=0.4 (presented in Pietrinferni et al. [17]). Recall that the α elements are O, Ne, Mg, Si, S, Ar, Ca, and Ti. These α-enhanced models are useful for modeling low-metallicity stars that formed prior to significant iron enrichment from type Ia supernovae. These stars are most common in the Galactic halo and low-mass dwarf galaxies. Note that the conversion between metal mass fraction Z and logarithmic metal abundance [M/H] is the same for the scaled-solar models as for the α-enhanced models, however the iron abundance [Fe/H] is not the same as [M/H] – see Table 1 of Pietrinferni et al. [17].","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"The BaSTIv1 models are also differentiated by whether they include convective overshooting during central H-burning. So-called \"canonical\" models do not including overshooting, while \"non-canonical\" models do include a convective overshooting treatment (see section 3 of Pietrinferni et al. [16]). Inclusion of convective overshooting during central H-burning mainly changes the main sequence turn-off morphology and generally results in better fits to simple stellar populations like globular clusters. For methods in this module that take a canonical::Bool argument, a value of canonical=true indicates you want to use the \"canonical\" stellar models, while a value of canonical=false means you want to use the \"non-canonical\" models that include convective core overshooting.","category":"page"},{"location":"basti_v1/#Examples","page":"BaSTIv1","title":"Examples","text":"","category":"section"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"First we load the full BaSTIv1 library, which is downloaded via DataDeps.jl if not already available.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"using StellarTracks.BaSTIv1\np = BaSTIv1Library(0.0, false)","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"Now we use the BaSTIv1Library to interpolate an isochrone at log10(age [yr]) = 10.05 and logarithmic metallicity [M/H]=-1.234. The isochrone is returned as a NamedTuple.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"iso = isochrone(p, 10.05, -1.234)","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"The NamedTuple returned by isochrone can be converted to table types, like TypedTables.Table to simplify further use.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"using TypedTables: Table\nTable(iso)","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"The theoretical isochrone is plotted below.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"plot_hr(iso) # hide","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"We can load a grid of bolometric corrections from BolometricCorrections.jl to add observational magnitudes to the theoretical isochrone. In this example, we use the MIST bolometric correction grid, which offers bolometric corrections for varying metallicities ([M/H]) and reddening values (A_V).","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"Because the solar metallicity calibrations of BaSTIv1 and MIST are not exactly the same, the protostellar metal mass fraction Z that corresponds to a given [M/H] is not the same between the two libraries. The isochrone interface will convert the given [M/H], which is assumed to be the desired metallicity in the stellar track library, to its corresponding metal mass fraction, and then convert from the metal mass fraction to the correct [M/H] for the assumed chemical model of the bolometric correction grid.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"This method returns a TypedTables.Table that contains the information from both sources. Here we evaluate an isochrone with log10(age [yr]) = 10.05, [M/H]=-1.234, and A_v=002 mag. ","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"using BolometricCorrections.MIST: MISTBCGrid\nm = MISTBCGrid(\"JWST\")\niso = isochrone(p, m, 10.05, -1.234, 0.02)","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"All available columns in the isochrone can be obtained with TypedTables.columnnames.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"using TypedTables: columnnames\ncolumnnames(iso)","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"A color-magnitude diagram constructed from the isochrone is plotted below.","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"plot_cmd(iso) # hide","category":"page"},{"location":"basti_v1/#Library-API","page":"BaSTIv1","title":"Library API","text":"","category":"section"},{"location":"basti_v1/#StellarTracks.BaSTIv1.BaSTIv1Library","page":"BaSTIv1","title":"StellarTracks.BaSTIv1.BaSTIv1Library","text":"BaSTIv1Library(α_fe::Number=0, canonical::Bool=false)\n\nBaSTIv1Library implements the AbstractTrackLibrary interface for the older BaSTI stellar evolution models presented in Pietrinferni et al. [16], Pietrinferni et al. [17] and Pietrinferni et al. [15]. Instances can be constructed by providing a supported α_fe argument for the [α/Fe] enrichment, which must be equal to either 0 (scaled-solar abundances) or 0.4 with a default of α_fe=0. You must also provide a Bool (either true or false) for the canonical argument – if true, we load the \"canonical\" models which do not include convective overshooting from the Schwarzschild boundary. The non-canonical models (used when canonical=false) do include a treatment of convective overshoot (see section 3 of Pietrinferni et al. [16]) which mainly alters the main sequence turn-off morphology.\n\nIf you construct an instance as p = BaSTIv1Library(0.0, false), it is callable as\n\np(mh::Number) to interpolate the full library to a new metallicity (returning a BaSTIv1TrackSet), or\np(mh::Number, M::Number) to interpolate the tracks to a specific metallicity and initial stellar mass (returning a BaSTIv1Track).\n\nThis type also supports isochrone construction (see isochrone).\n\nExamples\n\njulia> p = BaSTIv1Library(0.0, false)\nStructure of interpolants for the older BaSTI library of non-canonical stellar tracks with [α/Fe]=0.0. Valid range of metallicities is (-3.325301806420611, 0.4488276373116895).\n\njulia> isochrone(p, 10.05, -2.01) isa NamedTuple\ntrue\n\n\n\n\n\n","category":"type"},{"location":"basti_v1/#StellarTracks.isochrone-Tuple{BaSTIv1Library, Number, Number}","page":"BaSTIv1","title":"StellarTracks.isochrone","text":"isochrone(p::BaSTIv1Library, logAge::Number, mh::Number)\n\nInterpolates properties of the stellar tracks in the library at the requested logarithmic age (logAge = log10(age [yr])) and logarithmic metallicity [M/H] = mh. Returns a NamedTuple containing the properties listed below:\n\neep: Equivalent evolutionary points\nm_ini: Initial stellar masses, in units of solar masses.\nlogTe: Base-10 logarithm of the effective temperature [K] of the stellar model.\nMbol: Bolometric luminosity of the stellar model.\nlogg: Surface gravity of the stellar model.\n\n\n\n\n\n","category":"method"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"The full library is principally a set of BaSTIv1TrackSets, with one track set per unique chemical composition. We do not presently offer interpolation as a function of [α/Fe] or between the canonical and non-canonical models, so the individual track sets in the library vary only in total metallicity (i.e., Z).","category":"page"},{"location":"basti_v1/#Track-Set-API","page":"BaSTIv1","title":"Track Set API","text":"","category":"section"},{"location":"basti_v1/#StellarTracks.BaSTIv1.BaSTIv1TrackSet","page":"BaSTIv1","title":"StellarTracks.BaSTIv1.BaSTIv1TrackSet","text":"BaSTIv1TrackSet(zval::Number, α_fe::Number=0, canonical::Bool=false)\n\nBaSTIv1TrackSet implements the AbstractTrackSet interface for the older BaSTI stellar evolution library [15–17].\n\njulia> ts = StellarTracks.BaSTIv1.BaSTIv1TrackSet(1e-3, 0.0, false)\nNon-canonical BaSTIv1TrackSet with MH=-1.3239328427169887, [α/Fe]=0.0, Z=0.001, Y=0.24640000006649643, 1999 EEPs and 25 initial stellar mass points.\n\njulia> ts(1.01) # Interpolate track at new initial mass\nNon-canonical BaSTIv1Track with M_ini=1.01, MH=-1.3239328427169887, [α/Fe]=0.0, Z=0.001, Y=0.24640000006649643, X=0.7525999998860061.\n\njulia> isochrone(ts, 10.0) isa NamedTuple # Interpolate isochrone at `log10(age [yr]) = 10`\ntrue\n\n\n\n\n\n","category":"type"},{"location":"basti_v1/#Individual-Tracks-API","page":"BaSTIv1","title":"Individual Tracks API","text":"","category":"section"},{"location":"basti_v1/#StellarTracks.BaSTIv1.BaSTIv1Track","page":"BaSTIv1","title":"StellarTracks.BaSTIv1.BaSTIv1Track","text":"BaSTIv1Track(zval::Number, mass::Number, α_fe::Number, canonical::Bool)\n\nBaSTIv1Track implements the AbstractTrack interface for the older BaSTI stellar evolution library [15–17].\n\nNote that due to the organization of the BaSTIv1 data files, this method requires constructing a BaSTIv1TrackSet and is therefore not efficient if your aim is to construct multiple tracks of the same metallicity zval, α-enrichment α_fe, and core overshoot prescription (canonical=true uses models with no convective overshooting). In this case, you should construct a BaSTIv1TrackSet and call it with the masses you want, e.g., ts = BaSTIv1TrackSet(0.0001, 0.0, false); ts.([0.61, 0.82]). \n\njulia> track = StellarTracks.BaSTIv1.BaSTIv1Track(0.0001, 0.81, 0.0, true)\nCanonical BaSTIv1Track with M_ini=0.81, MH=-2.325177525233962, [α/Fe]=0.0, Z=0.0001, Y=0.24514, X=0.75476.\n\njulia> track(9.0) # interpolate track at log10(age [yr]) = 9\n(log_L = -0.15993145249931723, log_Teff = 3.7952196900545214, log_g = 4.640365439934053)\n\n\n\n\n\n","category":"type"},{"location":"basti_v1/#BaSTIv1-References","page":"BaSTIv1","title":"BaSTIv1 References","text":"","category":"section"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"This page cites the following references:","category":"page"},{"location":"basti_v1/","page":"BaSTIv1","title":"BaSTIv1","text":"A. Pietrinferni, S. Cassisi, M. Salaris and S. Hidalgo. The BaSTI Stellar Evolution Database: models for extremely metal-poor and super-metal-rich stellar populations. A&A 558, A46 (2013).\n\n\n\nA. Pietrinferni, S. Cassisi, M. Salaris and F. Castelli. A Large Stellar Evolution Database for Population Synthesis Studies. I. Scaled Solar Models and Isochrones. ApJ 612, 168–190 (2004).\n\n\n\nA. Pietrinferni, S. Cassisi, M. Salaris and F. Castelli. A Large Stellar Evolution Database for Population Synthesis Studies. II. Stellar Models and Isochrones for an alpha-enhanced Metal Distribution. ApJ 642, 797–812 (2006).\n\n\n\nS. L. Hidalgo, A. Pietrinferni, S. Cassisi, M. Salaris, A. Mucciarelli, A. Savino, A. Aparicio, V. S. Aguirre and K. Verma. The Updated BaSTI Stellar Evolution Models and Isochrones. I. Solar-scaled Calculations. ApJ 856, 125 (2018).\n\n\n\n","category":"page"},{"location":"doc_index/#index","page":"Index","title":"Index","text":"","category":"section"},{"location":"doc_index/","page":"Index","title":"Index","text":"","category":"page"},{"location":"#overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The purpose of this package is to provide access to pre-computed libraries of stellar evolutionary tracks. These libraries provide predictions for stellar interior and photosphere properties for stars of different initial masses and chemical compositions. In their standard form, each track describes the evolution of a single model star as it evolves through time. Tracks are identified uniquely by their initial stellar masses (M_textini) and chemical compositions. Most libraries will provide, at minimum, a set of stellar models with different total metallicity (typically quantified by the metal mass fraction Z). Some libraries will also vary other parameters like α-element abundance.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Isochrones representing stellar populations of uniform age and chemical composition but varying initial stellar masses can be formed by interpolating the tracks with the correct chemical compositions to the requested age. This form of isochrone creation can struggle when the spacing in initial mass between the tracks in a set is poor and generally does a poor job of capturing isochrone features that only manifest over a small range of initial stellar masses for a given age. Isochrone creation can be improved by identifying equivalent evolutionary points (EEPs) in these tracks [1]; example EEPs are the main sequence turn-off and the tip of the red giant branch. For each EEP, a relation between the stellar initial mass and the age of the star at the EEP can be constructed so that the initial mass of the star as a function of age can be inferred for each EEP. Properties like bolometric luminosity can then be interpolated and evaluated as a function of initial mass for this EEP. When there are many well-spaced EEPs, this method of isochrone creation outperforms the easier approach. We focus on tracks with EEPs to support this use case, as isochrone generation is one of the primary features of this package.","category":"page"},{"location":"#Supported-Libraries","page":"Overview","title":"Supported Libraries","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"We currently support the following stellar track libraries:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"PARSECv1.2S\nMIST\nBaSTIv1 (older BaSTI models, circa 2013)","category":"page"},{"location":"#Chemistry","page":"Overview","title":"Chemistry","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"We include information on the chemical mixtures assumed in each supported library above. We use the interface defined in BolometricCorrections.jl to provide this information.","category":"page"},{"location":"#Bolometric-Corrections","page":"Overview","title":"Bolometric Corrections","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The core function of this package is to provide an interface to libraries of stellar evolutionary tracks. One of the most common uses of these tracks is to make predictions for stellar observations, which requires placing the theoretical tracks (which model only stellar interior evolution) into the observed space by applying model stellar atmospheres.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"For integrated stellar photometry, this is typically done by applying bolometric corrections that integrate a stellar atmosphere over an observational bandpass to predict the stellar model's magnitude in that bandpass. An interface to these bolometric correction grids is provided by BolometricCorrections.jl. We take advantage of this interface to support the generation of isochrones in observational bandpasses.","category":"page"},{"location":"#API","page":"Overview","title":"API","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Our full API documentation is available here.","category":"page"},{"location":"#References","page":"Overview","title":"References","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This page cites the following references:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"A. Dotter. MESA ISOCHRONES AND STELLAR TRACKS (MIST) 0: METHODS FOR THE CONSTRUCTION OF STELLAR ISOCHRONES. ApJS 222, 8 (2016).\n\n\n\n","category":"page"},{"location":"refs/#bibliography","page":"Bibliography","title":"Bibliography","text":"","category":"section"},{"location":"refs/","page":"Bibliography","title":"Bibliography","text":"A. Dotter. MESA ISOCHRONES AND STELLAR TRACKS (MIST) 0: METHODS FOR THE CONSTRUCTION OF STELLAR ISOCHRONES. ApJS 222, 8 (2016).\n\n\n\nA. Bressan, P. Marigo, L. Girardi, B. Salasnich, C. Dal Cero, S. Rubele and A. Nanni. PARSEC : stellar tracks and isochrones with the PAdova and TRieste Stellar Evolution Code. MNRAS 427, 127–145 (2012).\n\n\n\nY. Chen, L. Girardi, a. Bressan, P. Marigo, M. Barbieri and X. Kong. Improving PARSEC models for very low mass stars. MNRAS 444, 2525–2543 (2014).\n\n\n\nJ. Tang, A. Bressan, P. Rosenfield, A. Slemer, P. Marigo, L. Girardi and L. Bianchi. New PARSEC evolutionary tracks of massive stars at low metallicity: testing canonical stellar evolution in nearby star-forming dwarf galaxies. MNRAS 445, 4287–4305 (2014). Accessed on Mar 24, 2024. ADS Bibcode: 2014MNRAS.445.4287T.\n\n\n\nY. Chen, A. Bressan, L. Girardi, P. Marigo, X. Kong and A. Lanza. PARSEC evolutionary tracks of massive stars up to 350 M⊙ at metallicities 0.0001 ≤ Z ≤ 0.04. MNRAS 452, 1068–1080 (2015). Accessed on Mar 24, 2024. ADS Bibcode: 2015MNRAS.452.1068C.\n\n\n\nP. Rosenfield, P. Marigo, L. Girardi, J. J. Dalcanton, A. Bressan, B. F. Williams and A. Dolphin. Evolution of Thermally Pulsing Asymptotic Giant Branch Stars. V. Constraining the Mass Loss and Lifetimes of Intermediate-mass, Low-metallicity AGB Stars. ApJ 822, 73 (2016). Accessed on Aug 24, 2024. ADS Bibcode: 2016ApJ...822...73R.\n\n\n\nP. Marigo, L. Girardi, A. Bressan, P. Rosenfield, B. Aringer, Y. Chen, M. Dussin, A. Nanni, G. Pastorelli, T. S. Rodrigues, M. Trabucchi, S. Bladh, J. Dalcanton, M. A. Groenewegen, J. Montalbán and P. R. Wood. A New Generation of PARSEC-COLIBRI Stellar Isochrones Including the TP-AGB Phase. ApJ 835, 77 (2017). Accessed on Aug 21, 2024. ADS Bibcode: 2017ApJ...835...77M.\n\n\n\nG. Pastorelli, P. Marigo, L. Girardi, Y. Chen, S. Rubele, M. Trabucchi, B. Aringer, S. Bladh, A. Bressan, J. Montalbán, M. L. Boyer, J. J. Dalcanton, K. Eriksson, M. A. Groenewegen, S. Höfner, T. Lebzelter, A. Nanni, P. Rosenfield, P. R. Wood and M.-R. L. Cioni. Constraining the thermally pulsing asymptotic giant branch phase with resolved stellar populations in the Small Magellanic Cloud. MNRAS 485, 5666–5692 (2019). Accessed on Mar 24, 2024. ADS Bibcode: 2019MNRAS.485.5666P.\n\n\n\nG. Pastorelli, P. Marigo, L. Girardi, B. Aringer, Y. Chen, S. Rubele, M. Trabucchi, S. Bladh, M. L. Boyer, A. Bressan, J. J. Dalcanton, M. A. Groenewegen, T. Lebzelter, N. Mowlavi, K. L. Chubb, M.-R. L. Cioni, R. de Grijs, V. D. Ivanov, A. Nanni, J. T. van Loon and S. Zaggia. Constraining the thermally pulsing asymptotic giant branch phase with resolved stellar populations in the Large Magellanic Cloud. MNRAS 498, 3283–3301 (2020). Accessed on Mar 24, 2024. ADS Bibcode: 2020MNRAS.498.3283P.\n\n\n\nC. Nguyen, G. Costa, L. Girardi, G. Volpato, A. Bressan, Y. Chen, P. Marigo, X. Fu and P. Goudfrooij. PARSEC V2.0: Stellar tracks and isochrones of low- and intermediate-mass stars with rotation. Astronomy & Astrophysics 665, A126 (2022), arXiv:2207.08642 [astro-ph.SR].\n\n\n\nG. Costa, K. Shepherd, A. Bressan, F. Addari, Y. Chen, X. Fu, G. Volpato, C. Nguyen, L. Girardi, P. Marigo, A. Mazzi, G. Pastorelli, M. Trabucchi, D. Bossini and S. Zaggia. Evolutionary tracks, ejecta, and ionizing photons from intermediate-mass to very massive stars with PARSEC. Astronomy & Astrophysics 694, A193 (2025), arXiv:2501.12917 [astro-ph.SR].\n\n\n\nN. Grevesse and A. Sauval. Standard Solar Composition. Space Science Reviews 85, 161–174 (1998).\n\n\n\nE. Caffau, H.-G. Ludwig, M. Steffen, B. Freytag and P. Bonifacio. Solar Chemical Abundances Determined with a CO5BOLD 3D Model Atmosphere. Solar Physics 268, 255–269 (2011).\n\n\n\nJ. Choi, A. Dotter, C. Conroy, M. Cantiello, B. Paxton and B. D. Johnson. MESA ISOCHRONES AND STELLAR TRACKS (MIST). I. SOLAR-SCALED MODELS. ApJ 823, 102 (2016).\n\n\n\nA. Pietrinferni, S. Cassisi, M. Salaris and S. Hidalgo. The BaSTI Stellar Evolution Database: models for extremely metal-poor and super-metal-rich stellar populations. A&A 558, A46 (2013).\n\n\n\nA. Pietrinferni, S. Cassisi, M. Salaris and F. Castelli. A Large Stellar Evolution Database for Population Synthesis Studies. I. Scaled Solar Models and Isochrones. ApJ 612, 168–190 (2004).\n\n\n\nA. Pietrinferni, S. Cassisi, M. Salaris and F. Castelli. A Large Stellar Evolution Database for Population Synthesis Studies. II. Stellar Models and Isochrones for an alpha-enhanced Metal Distribution. ApJ 642, 797–812 (2006).\n\n\n\nS. L. Hidalgo, A. Pietrinferni, S. Cassisi, M. Salaris, A. Mucciarelli, A. Savino, A. Aparicio, V. S. Aguirre and K. Verma. The Updated BaSTI Stellar Evolution Models and Isochrones. I. Solar-scaled Calculations. ApJ 856, 125 (2018).\n\n\n\nE. E. Mamajek, G. Torres, A. Prsa, P. Harmanec, M. Asplund, P. D. Bennett, N. Capitaine, J. Christensen-Dalsgaard, E. Depagne, W. M. Folkner, M. Haberreiter, S. Hekker, J. L. Hilton, V. Kostov, D. W. Kurtz, J. Laskar, B. D. Mason, E. F. Milone, M. M. Montgomery, M. T. Richards, J. Schou and S. G. Stewart. IAU 2015 Resolution B2 on Recommended Zero Points for the Absolute and Apparent Bolometric Magnitude Scales, arXiv:1510.06262 (2015).\n\n\n\n","category":"page"}]
}
